digraph G {
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.TreeSet: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.PathGraphics: void fill(java.awt.Shape)>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void fill(java.awt.Shape)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.net.www.protocol.http.AuthenticationInfo: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<XYTextAnnotation: void setTextAnchor(org.jfree.chart.text.TextAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.chrono.ThaiBuddhistDate: int hashCode()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.title.LegendTitle: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue1()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.Year: int hashCode()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.axis.CategoryAnchor: void <clinit>()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.pie.DefaultPieDataset: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: int hashCode()>" -> "<java.awt.Font: int hashCode()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Character: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setStroke(java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.title.LegendTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <init>(java.lang.String,double,double)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.Line2D: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.provider.SHA3$SHA224: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.AttributedString$AttributedStringIterator: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.TimeZone: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Float: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.BufferCapabilities: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.chrono.ChronoZonedDateTimeImpl: int hashCode()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.MonthDay: boolean equals(java.lang.Object)>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setStroke(java.awt.Stroke)>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCode(int,double)>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void draw(java.awt.Shape)>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setFont(java.awt.Font)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Short: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.entity.TitleEntity: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[])>" -> "<java.awt.Color: void <clinit>()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.awt.BasicStroke: int hashCode()>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void <init>(double,double,double,double)>" -> "<java.awt.Color: void <clinit>()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.KeyToGroupMap: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<XYImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<sun.swing.text.TextComponentPrintable$IntegerSegment: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.util.Date: int hashCode()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setStroke(java.awt.Stroke)>" -> "<java.lang.Throwable: void <clinit>()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.JapaneseDate: boolean equals(java.lang.Object)>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void <init>(java.lang.String,double,double,double)>" -> "<java.awt.Color: void <clinit>()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.concurrent.ConcurrentSkipListSet: java.util.concurrent.ConcurrentSkipListSet clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xml.internal.serializer.NamespaceMappings: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.title.TextTitle: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.text.TextUtilities: java.awt.geom.Rectangle2D drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.FloatBuffer: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.GregorianCalendar: boolean equals(java.lang.Object)>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.KeyedObjects: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setBaseRadius(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D: void <clinit>()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.zone.ZoneOffsetTransition: int hashCode()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.NodeSetDTM: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Version: boolean equals(java.lang.Object)>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Ellipse2D$Float: java.awt.geom.Rectangle2D getBounds2D()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Requires: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>" -> "<org.jfree.chart.text.TextAnchor: int hashCode()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.image.MultiResolutionCachedImage: int getHeight(java.awt.image.ImageObserver)>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.Enum: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.Duration: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.data.category.DefaultCategoryDataset: int getColumnIndex(java.lang.Comparable)>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.TextAnnotation: void setTextAnchor(org.jfree.chart.text.TextAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<sun.nio.fs.WindowsPath: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.math.BigDecimal: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.JFormattedTextField$AbstractFormatter: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.util.ShapeList: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.DecimalFormat: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<XYDataImageAnnotation: void <init>(java.awt.Image,double,double,double,double,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void <init>(double,double,double,double)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.TimeZone: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.EditorKit: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Byte: int hashCode()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.Signature: java.lang.Object clone()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.SimpleTimeZone: java.lang.Object clone()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.datatransfer.MimeTypeParameterList: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCodeForDoubleArray(double[])>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.tree.DefaultTreeSelectionModel: java.lang.Object clone()>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>" -> "<java.awt.BasicStroke: int hashCode()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.Color: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.GridBagConstraints: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setValue2(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>" -> "<java.lang.Object: int hashCode()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>" -> "<java.awt.geom.RoundRectangle2D: int hashCode()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xml.internal.utils.ObjectVector: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<sun.awt.OSInfo$WindowsVersion: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Point2D$Double: double getY()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: void <clinit>()>" -> "<org.jfree.chart.text.TextAnchor: void <clinit>()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.image.AbstractMultiResolutionImage: int getHeight(java.awt.image.ImageObserver)>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void drawLine(int,int,int,int)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.RectangularShape: double getMaxX()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.Dimension2D: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.sound.midi.MetaMessage: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setRotationAnchor(org.jfree.chart.text.TextAnchor)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void <init>(java.lang.String,java.lang.Comparable,double,double)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: void <init>(java.lang.String,java.lang.Comparable,double)>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.XPath$NodeTest: java.lang.Object clone()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.entity.TitleEntity: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setCategory1(java.lang.Comparable)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<javax.swing.event.EventListenerList: void <clinit>()>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.text.RuleBasedBreakIterator$SafeCharIterator: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title,org.jfree.chart.util.RectangleAnchor)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.LocalDate: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.OffsetTime: int hashCode()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<XYTextAnnotation: void setX(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void <init>(double,double,double,double,org.jfree.chart.Drawable)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: void <init>(double,double,double,double,double,org.jfree.chart.Drawable)>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void setPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.chart.text.TextAnchor getRotationAnchor()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.provider.SHA3$SHA224: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.xy.IntervalXYDelegate: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: void setText(java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>" -> "<org.jfree.chart.event.AnnotationChangeEvent: void <init>(java.lang.Object,org.jfree.chart.annotations.Annotation)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: void addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.Font: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.provider.SHA3$SHA256: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.HijrahDate: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.ElementIterator: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.chart.text.TextAnchor getRotationAnchor()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<javax.swing.JViewport$BackingStoreMultiResolutionImage: int getWidth(java.awt.image.ImageObserver)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.axis.Tick: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>" -> "<java.lang.String: int hashCode()>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.ArrayDeque: java.util.ArrayDeque clone()>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.Path2D$Double: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setStroke(java.awt.Stroke)>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.IntBuffer: int hashCode()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.bcel.internal.classfile.Constant: java.lang.Object clone()>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<jdk.internal.icu.text.UCharacterIterator: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setPaint(java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void <init>(java.lang.String,java.lang.Comparable,double)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.Arrays: boolean equals(double[],double[])>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.NodeSet: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCodeForPaint(java.awt.Paint)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.invoke.MemberName: java.lang.invoke.MemberName clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: double getX()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.print.PageFormat: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.chrono.HijrahDate: int hashCode()>";
"<XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<CategoryTextAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.MonthDay: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void setCategory(java.lang.Comparable)>" -> "<java.lang.Throwable: void <clinit>()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.util.StrokeList: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>" -> "<java.awt.BasicStroke: int hashCode()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset()>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xml.internal.utils.BoolStack: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void draw(java.awt.Shape)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void scale(double,double)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setFont(java.awt.Font)>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<com.sun.org.apache.bcel.internal.classfile.JavaClass: boolean equals(java.lang.Object)>";
"<XYDrawableAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.jar.Attributes: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.YearMonth: boolean equals(java.lang.Object)>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.KeyedObject: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.java2d.loops.FontInfo: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.font.FontLineMetrics: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<jdk.internal.icu.impl.ReplaceableUCharacterIterator: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D$Float: void moveTo(float,float)>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Version: int hashCode()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getRotationAnchor()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Line2D$Float: java.awt.geom.Rectangle2D getBounds2D()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<XYShapeAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.lang.Enum: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.CubicCurve2D: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.BasicStroke: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.StyledEditorKit$1: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.plot.Plot: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setFont(java.awt.Font)>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.net.URI: boolean equals(java.lang.Object)>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.x509.NameConstraintsExtension: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.LegendItem: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.axes.NodeSequence: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Point2D$Float: double getX()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.StyledEditorKit$1: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.CharBuffer: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.util.calendar.ZoneInfo: java.lang.Object clone()>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.zip.ZipEntry: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.ProxyGraphics2D: void setFont(java.awt.Font)>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYPolygonAnnotation: java.lang.Object clone()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>" -> "<java.awt.BasicStroke: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke getOutlineStroke()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void setPaint(java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint getPaint()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.image.SunVolatileImage: int getWidth(java.awt.image.ImageObserver)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Provides: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void <init>(double,double,double,double,double,org.jfree.chart.Drawable)>" -> "<java.lang.Throwable: void <clinit>()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void fill(java.awt.Shape)>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.ChronoZonedDateTimeImpl: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.plot.Marker: java.lang.Object clone()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.text.CompactByteArray: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.ChronoLocalDateImpl: boolean equals(java.lang.Object)>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.Polygon: java.awt.geom.Rectangle2D getBounds2D()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.NumberFormat: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void fill(java.awt.Shape)>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Float: int hashCode()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[])>" -> "<java.awt.BasicStroke: void <init>(float)>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void setCategoryAnchor(org.jfree.chart.axis.CategoryAnchor)>" -> "<java.lang.Throwable: void <clinit>()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.geom.RoundRectangle2D: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.LinkedList: boolean contains(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xml.internal.utils.IntStack: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.KeyedObjects2D: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Point2D$Float: double getY()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.Instant: boolean equals(java.lang.Object)>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setOutlinePaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.xy.XYSeriesCollection: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.font.TextLayout: java.lang.Object clone()>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.text.RuleBasedCollationKey: boolean equals(java.lang.Object)>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.LocalTime: int hashCode()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setStroke(java.awt.Stroke)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String getText()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.PageAttributes: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Point2D$Float: double getY()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<TextAnnotation: void setTextAnchor(org.jfree.chart.text.TextAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Boolean: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void translate(double,double)>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.image.BufferedImage: int getWidth(java.awt.image.ImageObserver)>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint getPaint()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <init>(java.lang.String,double,double)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.InternationalFormatter: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Stroke getOutlineStroke()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<com.sun.org.apache.bcel.internal.classfile.JavaClass: int hashCode()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.ArrayList: boolean contains(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.Properties: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>" -> "<java.lang.Class: java.lang.Class forName(java.lang.String)>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.Rectangle: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.LocalDate: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void fill(java.awt.Shape)>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.ProxyGraphics2D: void fill(java.awt.Shape)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setFont(java.awt.Font)>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>" -> "<java.lang.NoClassDefFoundError: void <init>()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<AbstractAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.net.URI: int hashCode()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void draw(java.awt.Shape)>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.text.TextUtilities: void <clinit>()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.charset.Charset: int hashCode()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.cert.X509CRLSelector: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.regex.Match: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.text.RuleBasedCollationKey: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void draw(java.awt.Shape)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setArrowStroke(java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.java2d.SunGraphics2D: void draw(java.awt.Shape)>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.Line2D: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.Color: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.text.IntHashtable: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>" -> "<org.jfree.chart.plot.XYPlot: void annotationChanged(org.jfree.chart.event.AnnotationChangeEvent)>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.lang.String getText()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.data.category.DefaultCategoryDataset: int getColumnCount()>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.java2d.SunGraphics2D: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.data.Range: double getLowerBound()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void draw(java.awt.Shape)>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.Date: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String getText()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.Segment: java.lang.Object clone()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getRotationAnchor()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.Signature$Delegate: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.awt.geom.Path2D$Float: void lineTo(float,float)>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D$Float: void lineTo(float,float)>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <clinit>()>" -> "<java.awt.Font: void <clinit>()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: org.jfree.chart.axis.CategoryAnchor getCategoryAnchor()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void <init>(java.lang.Comparable,double,java.lang.Comparable,double,java.awt.Paint,java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.provider.SHAKE256: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.text.TextUtilities: java.awt.Shape calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void fill(java.awt.Shape)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.geom.Arc2D: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Runtime$Version: int hashCode()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.Point2D: java.lang.Object clone()>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void fill(java.awt.Shape)>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.util.AbstractObjectList: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.font.TextLayout: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.AbstractAction: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void <init>(java.lang.Comparable,double,java.lang.Comparable,double,java.awt.Paint,java.awt.Stroke)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setFont(java.awt.Font)>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.util.resources.Bundles$CacheKey: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setArrowPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.general.AbstractDataset: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.RectangularShape: double getMinY()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.imageio.plugins.tiff.TIFFDirectory: javax.imageio.plugins.tiff.TIFFDirectory clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.OffsetTime: int hashCode()>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setTipRadius(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.plot.PlotRenderingInfo: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void <init>(double,double,double,double)>" -> "<java.awt.BasicStroke: void <init>(float)>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<sun.security.x509.X509CRLImpl$X509IssuerSerial: int hashCode()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.cert.X509CRLSelector: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.geom.Rectangle2D: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<XYBoxAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Area: java.awt.geom.Rectangle2D getBounds2D()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.ChoiceFormat: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<XYTitleAnnotation: void setMaxHeight(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.XPath$Step: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.MessageDigest: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.TreeMap: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.title.LegendGraphic: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.security.cert.X509CRLEntry: int hashCode()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.provider.SHA3$SHA512: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Long: int hashCode()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.Insets: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.EnumSet: java.util.EnumSet clone()>";
"<XYTextAnnotation: void setBackgroundPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.ShortBuffer: boolean equals(java.lang.Object)>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setText(java.lang.String)>" -> "<java.lang.Throwable: void <clinit>()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setBaseRadius(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.chrono.AbstractChronology: int hashCode()>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D$Float: void <clinit>()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: void <init>(java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.LinkedList: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setText(java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void setCategoryAnchor(org.jfree.chart.axis.CategoryAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setOutlineStroke(java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.awt.geom.GeneralPath: void <init>()>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.title.Title: java.lang.Object clone()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Object: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.Format: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape)>" -> "<java.awt.BasicStroke: void <init>(float)>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setTransform(java.awt.geom.AffineTransform)>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.XPath$LocationPath: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean contains(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<java.awt.geom.Ellipse2D: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>" -> "<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection getEntityCollection()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.PeekGraphics: void setStroke(java.awt.Stroke)>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.CubicCurve2D$Float: java.awt.geom.Rectangle2D getBounds2D()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.IntBuffer: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: java.awt.geom.AffineTransform getTransform()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.net.www.MimeEntry: java.lang.Object clone()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setBackgroundPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Integer: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection getEntityCollection()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.JobAttributes: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setArrowLength(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Character: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.Calendar: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.ZonedDateTime: int hashCode()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.tree.DefaultTreeSelectionModel: java.lang.Object clone()>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.windows.WPathGraphics: void draw(java.awt.Shape)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Collections$CheckedCollection: boolean contains(java.lang.Object)>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.RectangularShape: double getMaxY()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D: void closePath()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.LongBuffer: boolean equals(java.lang.Object)>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Comparable getCategory()>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.block.BlockResult: org.jfree.chart.entity.EntityCollection getEntityCollection()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.ElementIterator$StackItem: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Font getFont()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.util.calendar.ImmutableGregorianDate: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void setFont(java.awt.Font)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.net.ProgressSource: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void <init>(java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.Hashtable$Entry: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void fill(java.awt.Shape)>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.util.calendar.ZoneInfo: java.lang.Object clone()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.util.Calendar: int hashCode()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.chrono.AbstractChronology: int hashCode()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void setY(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.QuadCurve2D: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.EnumMap: java.util.EnumMap clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.DateFormatSymbols: java.lang.Object clone()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void drawLine(int,int,int,int)>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.Year: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.MessageDigest: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void setAngle(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.Date: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void drawLine(int,int,int,int)>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Opens: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setFont(java.awt.Font)>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.tree.DefaultMutableTreeNode: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<AbstractAnnotation: void setNotify(boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.DQTMarkerSegment: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.awt.geom.Path2D$Float: void <clinit>()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.BitSet: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.pie.DefaultPieDataset: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Exports: int hashCode()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void <init>(java.lang.String,double,double,double)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: void <init>(java.lang.String,double,double)>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.text.TextUtilities: void <clinit>()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>" -> "<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.java2d.SunGraphics2D: void setFont(java.awt.Font)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.net.URI: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Float: double getWidth()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font getFont()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.LinkedList: java.lang.Object clone()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title,org.jfree.chart.util.RectangleAnchor)>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: double getY()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.general.DatasetGroup: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.Instant: int hashCode()>";
"<CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getRotationAnchor()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setStroke(java.awt.Stroke)>";
"<XYShapeAnnotation: void <init>(java.awt.Shape)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint)>";
"<org.jfree.chart.annotations.TextAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: double getValue()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<TextAnnotation: void <init>(java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.charset.Charset: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Font getFont()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>" -> "<java.lang.String: int hashCode()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<sun.awt.util.IdentityArrayList: boolean contains(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Double: double getHeight()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setRotationAnchor(org.jfree.chart.text.TextAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: int hashCode()>" -> "<java.lang.String: int hashCode()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.ByteBuffer: int hashCode()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.image.SunVolatileImage: int getHeight(java.awt.image.ImageObserver)>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.bcel.internal.classfile.Constant: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void scale(double,double)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.entity.LegendItemEntity: java.lang.Object clone()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Float: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.net.ProgressSource: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void draw(java.awt.Shape)>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Requires: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: void setCategory2(java.lang.Comparable)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.Year: int hashCode()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Provides: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<sun.awt.OSInfo$WindowsVersion: int hashCode()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYImageAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.Hashtable$Entry: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.lang.Thread: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.data.xy.XYDataItem: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.data.Range: void <init>(double,double)>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.LegendItem: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.ZoneOffset: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.ImageCapabilities: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.xni.QName: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<org.jfree.data.xy.XYDataItem: int hashCode()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.SimpleDateFormat: java.lang.Object clone()>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.jar.Attributes: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setPaint(java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void <init>(java.lang.String,java.lang.Comparable,double)>" -> "<org.jfree.chart.annotations.TextAnnotation: void <init>(java.lang.String)>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.entity.PlotEntity: java.lang.Object clone()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Object: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.font.DelegatingShape: java.awt.geom.Rectangle2D getBounds2D()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <clinit>()>" -> "<java.awt.Font: void <init>(java.lang.String,int,int)>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void <init>(java.lang.Comparable,double,java.lang.Comparable,double,java.awt.Paint,java.awt.Stroke)>" -> "<java.awt.Color: void <clinit>()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<CategoryTextAnnotation: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.html.OptionListModel: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.tree.DefaultMutableTreeNode: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.concurrent.ConcurrentSkipListSet: java.util.concurrent.ConcurrentSkipListSet clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.chrono.HijrahDate: int hashCode()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setTipRadius(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.Collator: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double)>" -> "<java.awt.Color: void <clinit>()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.util.ShapeUtilities: boolean clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.JumboEnumSet: java.util.EnumSet clone()>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.block.AbstractBlock: org.jfree.chart.util.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<sun.swing.text.TextComponentPrintable$IntegerSegment: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.lang.Object: java.lang.Object clone()>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.ZoneOffset: int hashCode()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.title.TextTitle: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.font.TextMeasurer: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.ZoneOffset: int hashCode()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>" -> "<java.lang.Object: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.plot.IntervalMarker: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.XPath$Axis: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setCategory2(java.lang.Comparable)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<XYTitleAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.windows.WPathGraphics: void draw(java.awt.Shape)>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void draw(java.awt.Shape)>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void setRotationAnchor(org.jfree.chart.text.TextAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.text.TextUtilities: void <clinit>()>";
"<XYPolygonAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setArrowStroke(java.awt.Stroke)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.JumboEnumSet: java.util.EnumSet clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.MinguoDate: boolean equals(java.lang.Object)>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xml.internal.utils.NodeVector: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.xy.XYSeries: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.DateFormatSymbols: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Requires: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.plot.PlotRenderingInfo: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Runtime$Version: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.util.StandardGradientPaintTransformer: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.RenderingHints: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.java2d.SunGraphics2D: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void <clinit>()>" -> "<java.awt.Font: void <clinit>()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.JPEGMetadata: java.lang.Object clone()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint getPaint()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<CategoryTextAnnotation: void <init>(java.lang.String,java.lang.Comparable,double)>" -> "<org.jfree.chart.annotations.TextAnnotation: void <init>(java.lang.String)>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.axes.WalkingIterator: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.lang.String getText()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.lang.invoke.MemberName: java.lang.invoke.MemberName clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.ProcessHandleImpl: int hashCode()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.AbstractAction: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.text.RuleBasedBreakIterator: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Point2D$Float: double getX()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint getPaint()>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.sound.midi.ShortMessage: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.OffsetDateTime: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setOutlinePaint(java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<TextAnnotation: void <init>(java.lang.String)>" -> "<org.jfree.chart.annotations.TextAnnotation: void <clinit>()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.RuleBasedCollator: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void drawLine(int,int,int,int)>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.bcel.internal.generic.FieldGenOrMethodGen: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV$DateTimeData: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.ZoneOffset: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title)>" -> "<org.jfree.chart.util.RectangleAnchor: void <clinit>()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.util.GregorianCalendar: int hashCode()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.Calendar: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Float: int hashCode()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.GeneralPath: void <init>()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.image.BufferedImage: int getHeight(java.awt.image.ImageObserver)>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.OffsetDateTime: int hashCode()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Float: double getHeight()>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.LocalDateTime: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: void setPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Object: int hashCode()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.cert.PKIXParameters: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: org.jfree.data.Range getXRange()>" -> "<org.jfree.data.Range: void <init>(double,double)>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.java2d.loops.FontInfo: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.RenderingHints: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font getFont()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void setArrowPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.data.category.DefaultCategoryDataset: int getColumnCount()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void setRotationAngle(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <clinit>()>" -> "<org.jfree.chart.text.TextAnchor: void <clinit>()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setLabelOffset(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: double getRotationAngle()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<XYTextAnnotation: void setOutlineVisible(boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.text.TextAnchor: boolean equals(java.lang.Object)>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.AffineTransform: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font getFont()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<XYBoxAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.ProxyGraphics2D: void draw(java.awt.Shape)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.provider.SHA3$SHA256: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void <init>(java.lang.String)>" -> "<org.jfree.chart.annotations.TextAnnotation: void <clinit>()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: double getRotationAngle()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.math.BigInteger: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.title.LegendTitle: org.jfree.chart.util.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.util.calendar.ImmutableGregorianDate: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.print.attribute.EnumSyntax: java.lang.Object clone()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.RectangleAnchor: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.RuleBasedCollator: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Runtime$Version: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.RectangularShape: double getMinX()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.String: int hashCode()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean contains(java.lang.Object)>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory2()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.font.CharArrayIterator: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.io.File: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.util.ShapeList: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor: int hashCode()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.Instant: int hashCode()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.DQTMarkerSegment: java.lang.Object clone()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.lang.Math: double cos(double)>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.windows.WPathGraphics: void draw(java.awt.Shape)>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.entity.StandardEntityCollection: void addAll(org.jfree.chart.entity.EntityCollection)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>" -> "<java.lang.Object: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean isOutlineVisible()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void fill(java.awt.Shape)>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void draw(java.awt.Shape)>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void setCategory(java.lang.Comparable)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setArrowPaint(java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.util.resources.Bundles$CacheKey: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.windows.WPathGraphics: void draw(java.awt.Shape)>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.CubicCurve2D$Double: java.awt.geom.Rectangle2D getBounds2D()>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<AbstractAnnotation: void fireAnnotationChanged()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setStroke(java.awt.Stroke)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.text.IntHashtable: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.image.ImageFilter: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Object: boolean equals(java.lang.Object)>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.math.BigInteger: int hashCode()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.AffineTransform: void <clinit>()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void <init>(java.lang.String,double,double,double)>" -> "<java.awt.BasicStroke: void <init>(float)>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.text.TextUtilities: void <clinit>()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setCategory1(java.lang.Comparable)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.data.category.DefaultCategoryDataset: int getColumnIndex(java.lang.Comparable)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void <init>(double,double,java.awt.Image,org.jfree.chart.util.RectangleAnchor)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.general.Series: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D$Float: void moveTo(float,float)>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.ArrayList$SubList: boolean contains(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCodeForPaint(java.awt.Paint)>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.ThaiBuddhistDate: boolean equals(java.lang.Object)>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.util.XYCoordinateType: void <clinit>()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.xy.IntervalXYDelegate: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.ZonedDateTime: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.IntBuffer: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.NumberFormat: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setCategory2(java.lang.Comparable)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.LongBuffer: boolean equals(java.lang.Object)>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.DefaultFormatter: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Short: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<XYBoxAnnotation: void <init>(double,double,double,double)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Short: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: double getValue()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.x509.NameConstraintsExtension: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void scale(double,double)>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.chrono.ChronoLocalDateImpl: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.CubicCurve2D: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.png.PNGMetadata: java.lang.Object clone()>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: int hashCode()>" -> "<org.jfree.chart.text.TextAnchor: int hashCode()>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void <init>(double,double,double,double,double,org.jfree.chart.Drawable)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void fill(java.awt.Shape)>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.windows.WPathGraphics: void draw(java.awt.Shape)>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void <init>(java.lang.Comparable,double,java.lang.Comparable,double,java.awt.Paint,java.awt.Stroke)>" -> "<java.awt.BasicStroke: void <init>(float)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.ArrayTable: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<XYLineAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.lang.Math: double cos(double)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xml.internal.utils.IntVector: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.axis.CategoryAxis: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<XYTextAnnotation: void setFont(java.awt.Font)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.DecimalFormatSymbols: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.ZonedDateTime: int hashCode()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void fill(java.awt.Shape)>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.Vector: java.lang.Object clone()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <init>(java.lang.String,double,double)>" -> "<java.awt.Color: void <clinit>()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.image.Kernel: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.KeyToGroupMap: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.DHTMarkerSegment: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<sun.security.x509.X509CRLImpl$X509IssuerSerial: int hashCode()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String getText()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<XYPointerAnnotation: void setLabelOffset(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.datatransfer.MimeType: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.GlyphView: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.Format: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setTextAnchor(org.jfree.chart.text.TextAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Object: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.LocalTime: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.general.AbstractDataset: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>" -> "<javax.swing.event.EventListenerList: void <clinit>()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.String getText()>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xml.internal.utils.NodeVector: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void fill(java.awt.Shape)>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean removeAnnotation(org.jfree.chart.annotations.XYAnnotation)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Byte: boolean equals(java.lang.Object)>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.TreeSet: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title,org.jfree.chart.util.RectangleAnchor)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<XYTextAnnotation: void <init>(java.lang.String,double,double)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void setTipRadius(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.file.attribute.FileTime: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.axis.TickUnit: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.block.BlockContainer: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.util.calendar.CalendarDate: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.InternationalFormatter: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setStroke(java.awt.Stroke)>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void setText(java.lang.String)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.DoubleBuffer: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setArrowWidth(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: double getRotationAngle()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.EditorKit: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.axis.CategoryAxis: double getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.YearMonth: int hashCode()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.cert.PKIXCertPathValidatorResult: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.ChoiceFormat: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setRotationAnchor(org.jfree.chart.text.TextAnchor)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Double: void setRect(double,double,double,double)>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.StyledEditorKit: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.Arrays: void <clinit>()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.JapaneseImperialCalendar: java.lang.Object clone()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.file.attribute.FileTime: int hashCode()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: org.jfree.data.Range getYRange()>" -> "<org.jfree.data.Range: void <init>(double,double)>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.bcel.internal.generic.LocalVariableGen: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Collections$SingletonList: boolean contains(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.math.BigInteger: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.Rectangle: double getWidth()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void fill(java.awt.Shape)>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setStroke(java.awt.Stroke)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<XYTextAnnotation: void <init>(java.lang.String,double,double)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: void <clinit>()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getOutlinePaint()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.MonthDay: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.plot.DefaultDrawingSupplier: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xml.internal.utils.ObjectVector: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.axis.Axis: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.charset.Charset: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.chrono.ChronoLocalDateTimeImpl: int hashCode()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.axis.AxisSpace: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.HashMap: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.entity.JFreeChartEntity: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Vector: boolean contains(java.lang.Object)>";
"<TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<org.jfree.chart.annotations.TextAnnotation: void setRotationAnchor(org.jfree.chart.text.TextAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.OffsetTime: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Provides: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYLineAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D$Float: void lineTo(float,float)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Point2D$Double: double getX()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.bcel.internal.classfile.Attribute: java.lang.Object clone()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>" -> "<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xml.internal.utils.ObjectStack: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYPolygonAnnotation: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.util.BitArray: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: double getRotationAngle()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.font.AttributeValues: sun.font.AttributeValues clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void draw(java.awt.Shape)>";
"<XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.lang.ref.Reference: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<sun.awt.OSInfo$WindowsVersion: boolean equals(java.lang.Object)>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.Dimension2D: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.JapaneseDate: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void setBaseRadius(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Object: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.StyledEditorKit: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.StringCharacterIterator: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Opens: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.util.Calendar: int hashCode()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.axis.CategoryAnchor: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.ProxyGraphics2D: void setStroke(java.awt.Stroke)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.axis.CategoryAxis: double getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title,org.jfree.chart.util.RectangleAnchor)>" -> "<org.jfree.chart.util.XYCoordinateType: void <clinit>()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.Area: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void <init>(double,double,java.awt.Image)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: void <init>(double,double,java.awt.Image,org.jfree.chart.util.RectangleAnchor)>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<jdk.internal.icu.impl.CharacterIteratorWrapper: java.lang.Object clone()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.OffsetDateTime: int hashCode()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.DoubleBuffer: boolean equals(java.lang.Object)>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getOutlinePaint()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.ZonedDateTime: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.entity.AxisEntity: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Exports: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: org.jfree.chart.axis.CategoryAnchor getCategoryAnchor()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<jdk.internal.icu.text.NormalizerBase: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.image.AbstractMultiResolutionImage: int getWidth(java.awt.image.ImageObserver)>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.chrono.MinguoDate: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.Duration: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>" -> "<javax.swing.event.EventListenerList: void <init>()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.YearMonth: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: void setPaint(java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.axis.Tick: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<sun.util.BuddhistCalendar: int hashCode()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: double getY()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.font.StandardGlyphVector: java.lang.Object clone()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Arc2D: java.awt.geom.Rectangle2D getBounds2D()>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.title.LegendGraphic: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D$Float: void <clinit>()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.util.RectangleAnchor: void <clinit>()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<TextAnnotation: void setRotationAnchor(org.jfree.chart.text.TextAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void setTextAnchor(org.jfree.chart.text.TextAnchor)>" -> "<java.lang.Throwable: void <clinit>()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Boolean: int hashCode()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>" -> "<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.OffsetTime: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<TextAnnotation: void setRotationAngle(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<org.jfree.chart.axis.TickUnit: int hashCode()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<sun.nio.fs.WindowsPath: int hashCode()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: double getRotationAngle()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.RectangleAnchor: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setArrowStroke(java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<TextAnnotation: void setFont(java.awt.Font)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue2()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.block.BlockParams: void <init>()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Version: int hashCode()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<sun.nio.fs.WindowsPath: int hashCode()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.Duration: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.chrono.ThaiBuddhistDate: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.java2d.SunGraphics2D: void setStroke(java.awt.Stroke)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>" -> "<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>";
"<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>" -> "<java.lang.Object: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.SignatureSpi: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCodeForPaint(java.awt.Paint)>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.LongBuffer: int hashCode()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.PeekGraphics: void draw(java.awt.Shape)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.axes.UnionPathIterator: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.text.RuleBasedCollationKey: int hashCode()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.block.LabelBlock: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.datatransfer.DataFlavor: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.block.LabelBlock: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.provider.SHA3: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.RoundRectangle2D$Float: java.awt.geom.Rectangle2D getBounds2D()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.ShortBuffer: boolean equals(java.lang.Object)>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.data.xy.XYDataItem: boolean equals(java.lang.Object)>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getBackgroundPaint()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<sun.swing.text.TextComponentPrintable$IntegerSegment: int hashCode()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Comparable getCategory()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.bcel.internal.generic.LineNumberGen: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.DHTMarkerSegment: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.net.URI: int hashCode()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>" -> "<java.awt.geom.Arc2D: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.math.BigDecimal: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.String: int hashCode()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.TableView: void updateInsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.zip.ZipEntry: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Byte: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.util.StandardGradientPaintTransformer: java.lang.Object clone()>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<org.jfree.data.xy.XYDataItem: int hashCode()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setArrowStroke(java.awt.Stroke)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D getBounds2D()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.Segment: java.lang.Object clone()>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.YearMonth: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.Hashtable: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.FloatBuffer: int hashCode()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory1()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Collections$EmptyList: boolean contains(java.lang.Object)>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font getFont()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.print.PageFormat: java.lang.Object clone()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<XYTextAnnotation: void <clinit>()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: void <clinit>()>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.title.Title: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor: int hashCode()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<javax.swing.JViewport$BackingStoreMultiResolutionImage: int getHeight(java.awt.image.ImageObserver)>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.RectangularShape: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void <init>(java.lang.String,java.lang.Comparable,double)>" -> "<org.jfree.chart.axis.CategoryAnchor: void <clinit>()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory1()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.file.attribute.FileTime: int hashCode()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void setArrowStroke(java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.text.CompactByteArray: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.provider.SHA3$SHA384: java.lang.Object clone()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: void clearAnnotations()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.XPath$NodeTest: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void <init>(java.awt.Image,double,double,double,double)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: void <init>(java.awt.Image,double,double,double,double,boolean)>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D$Float: java.awt.geom.Rectangle2D getBounds2D()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.category.DefaultCategoryDataset: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setFont(java.awt.Font)>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.axes.OneStepIterator: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.Area: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.axes.UnionPathIterator: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.axis.ValueAxis: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.SimpleAttributeSet: java.lang.Object clone()>";
"<CategoryLineAnnotation: void setCategory1(java.lang.Comparable)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: void addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.html.HTMLEditorKit: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <init>(java.lang.String,double,double)>" -> "<java.awt.BasicStroke: void <init>(float)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.awt.windows.WPathGraphics: void draw(java.awt.Shape)>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void setOutlinePaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setCategory1(java.lang.Comparable)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.CategoryPlot: boolean removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getPaint()>";
"<CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Font getFont()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setOutlineStroke(java.awt.Stroke)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void setPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.MessageDigestSpi: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: double getValue()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.Path2D$Double: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<CategoryTextAnnotation: void setValue(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void draw(java.awt.Shape)>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Comparable getCategory()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.plot.DefaultDrawingSupplier: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Double: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.bcel.internal.generic.LocalVariableGen: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.math.BigInteger: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.entity.ChartEntity: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.image.ToolkitImage: int getHeight(java.awt.image.ImageObserver)>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.renderer.AbstractRenderer: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.chrono.ChronoZonedDateTimeImpl: int hashCode()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.axes.AxesWalker: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.chart.text.TextAnchor getRotationAnchor()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.GridBagConstraints: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void <init>(double,double,double,double,double,org.jfree.chart.Drawable)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void draw(java.awt.Shape)>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>" -> "<java.awt.BasicStroke: int hashCode()>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.AbstractMap: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.entity.ChartEntity: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Float: java.awt.geom.Rectangle2D getBounds2D()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void draw(java.awt.Shape)>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.plot.Plot: java.lang.Object clone()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>" -> "<org.jfree.chart.entity.StandardEntityCollection: void add(org.jfree.chart.entity.ChartEntity)>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setStroke(java.awt.Stroke)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.net.www.protocol.http.AuthenticationInfo: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void draw(java.awt.Shape)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.net.HttpCookie: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.bcel.internal.generic.FieldGenOrMethodGen: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.JFreeChart: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>" -> "<org.jfree.chart.entity.XYAnnotationEntity: void <init>(java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.zone.ZoneOffsetTransition: int hashCode()>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.entity.StandardEntityCollection: java.lang.Object clone()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.bcel.internal.generic.ClassGen: java.lang.Object clone()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Font getFont()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<XYLineAnnotation: void <init>(double,double,double,double)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: void clearAnnotations()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.xy.XYSeriesCollection: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<sun.nio.fs.WindowsPath: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<XYDrawableAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.bcel.internal.generic.LineNumberGen: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<CategoryPointerAnnotation: void setArrowWidth(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xml.internal.serializer.NamespaceMappings: java.lang.Object clone()>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.axes.OneStepIterator: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.axes.AxesWalker: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.FloatBuffer: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.LegendItemCollection: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.LocalTime: boolean equals(java.lang.Object)>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.text.TextUtilities: java.awt.Shape calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Enum: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.axis.CategoryAxis: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.lang.Math: double sin(double)>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setStroke(java.awt.Stroke)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.xni.QName: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setAngle(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setOutlineStroke(java.awt.Stroke)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.cert.PKIXCertPathValidatorResult: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.LegendItemCollection: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: void <init>(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setX(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.provider.SHA3$SHA384: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.provider.DigestBase: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.title.TextTitle: org.jfree.chart.util.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title,org.jfree.chart.util.RectangleAnchor)>" -> "<java.lang.Throwable: void <clinit>()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<XYPointerAnnotation: void setAngle(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>";
"<CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCodeForPaint(java.awt.Paint)>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setTransform(java.awt.geom.AffineTransform)>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.awt.geom.Path2D: void closePath()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setStroke(java.awt.Stroke)>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.util.RectangleAnchor: void <clinit>()>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: org.jfree.chart.text.TextAnchor getRotationAnchor()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Arrays: java.util.List asList(java.lang.Object[])>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLWriter: boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet,javax.swing.text.html.HTML$Tag,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.chrono.ChronoLocalDateTimeImpl: int hashCode()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.NodeSetDTM: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Exports: int hashCode()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.lang.Math: float min(float,float)>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.ChronoLocalDateTimeImpl: boolean equals(java.lang.Object)>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setStroke(java.awt.Stroke)>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint)>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.Path2D$Float: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.Rectangle: double getHeight()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Short: int hashCode()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.util.ShapeUtilities: java.awt.Shape createLineRegion(java.awt.geom.Line2D,float)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean isOutlineVisible()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.lang.String getText()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.provider.DigestBase: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.Year: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void setMaxWidth(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.BufferCapabilities: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<jdk.internal.icu.text.UCharacterIterator: java.lang.Object clone()>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Banded: void <init>(java.awt.color.ColorSpace,int[],int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void setCategoryAnchor(org.jfree.chart.axis.CategoryAnchor)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <init>(java.lang.String,double,double)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: void <clinit>()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.data.Range: double getLength()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.swing.CachedPainter$PainterMultiResolutionCachedImage: int getWidth(java.awt.image.ImageObserver)>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.Point: double getX()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<jdk.internal.icu.impl.CharacterIteratorWrapper: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.general.DatasetGroup: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void setArrowStroke(java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.axes.FilterExprWalker: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.HashSet: java.lang.Object clone()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void draw(java.awt.Shape)>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void fill(java.awt.Shape)>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.util.JapaneseImperialCalendar: int hashCode()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getPaint()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.ArrayDeque: java.util.ArrayDeque clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.provider.SHAKE256: java.lang.Object clone()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void draw(java.awt.Shape)>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.font.StandardGlyphVector: java.lang.Object clone()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.ChronoLocalDateImpl: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.Locale: java.lang.Object clone()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void draw(java.awt.Shape)>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Integer: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.math.BigDecimal: int hashCode()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.Rectangle: java.awt.geom.Rectangle2D getBounds2D()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: double getValue()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setAngle(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape)>" -> "<java.awt.Color: void <clinit>()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.DateFormat: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.entity.AxisEntity: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.datatransfer.DataFlavor: java.lang.Object clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D$Double: java.awt.geom.Rectangle2D getBounds2D()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.Hashtable: java.lang.Object clone()>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.DoubleBuffer: int hashCode()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.image.renderable.RenderContext: java.lang.Object clone()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title,org.jfree.chart.util.RectangleAnchor)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.chrono.ChronoLocalDateImpl: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void addAnnotation(org.jfree.chart.annotations.XYAnnotation,org.jfree.chart.util.Layer)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<org.jfree.chart.annotations.TextAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.KeyedObjects: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Runtime$Version: int hashCode()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.Calendar: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.imageio.plugins.tiff.TIFFDirectory: javax.imageio.plugins.tiff.TIFFDirectory clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Point2D$Double: double getY()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Font getFont()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.Signature$Delegate: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.IdentityHashMap: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.ByteBuffer: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.cert.X509CertSelector: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.Object: java.lang.Object clone()>";
"<sun.font.EAttribute: sun.font.EAttribute[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.jar.Manifest: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setPaint(java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void <init>(java.awt.Image,double,double,double,double,boolean)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<XYImageAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.BreakIterator: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.title.TextTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.MinguoDate: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.Insets: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.ArrayTable: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.text.RuleBasedCollationKey: int hashCode()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.Instant: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.ArrayList: java.lang.Object clone()>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: void setFont(java.awt.Font)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.QuadCurve2D$Float: java.awt.geom.Rectangle2D getBounds2D()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.XPath$Axis: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Font getFont()>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.StringCharacterIterator: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.font.TextMeasurer: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.BitSet: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Enum: int hashCode()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<CategoryTextAnnotation: void setCategoryAnchor(org.jfree.chart.axis.CategoryAnchor)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.StringCharBuffer: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D: void <clinit>()>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<com.sun.org.apache.bcel.internal.classfile.JavaClass: int hashCode()>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.util.StrokeList: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Arrays: void <clinit>()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.AbstractMap: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.AffineTransform: void <init>(double,double,double,double,double,double)>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void <init>(double,double,java.awt.Image,org.jfree.chart.util.RectangleAnchor)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xalan.internal.xsltc.util.IntegerArray: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.util.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setRotationAngle(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.TreeMap: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.lang.Math: void <clinit>()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<XYDataImageAnnotation: void <init>(java.awt.Image,double,double,double,double)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: void <init>(java.awt.Image,double,double,double,double,boolean)>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.html.OptionListModel: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.IdentityHashMap: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.BaseEntry$CatalogEntryType: javax.xml.catalog.BaseEntry$CatalogEntryType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void draw(java.awt.Shape)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.LocalDateTime: int hashCode()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>" -> "<org.jfree.chart.plot.CategoryPlot: void annotationChanged(org.jfree.chart.event.AnnotationChangeEvent)>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Opens: int hashCode()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setLabelOffset(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.io.File: boolean equals(java.lang.Object)>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.NodeSet: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <init>(java.lang.String,double,double)>" -> "<java.lang.Throwable: void <clinit>()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: void setValue2(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.Path2D$Float: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void removeAnnotations()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>" -> "<java.awt.Font: int hashCode()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.BreakIterator: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xml.internal.utils.IntVector: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.bcel.internal.generic.CodeExceptionGen: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.axis.Axis: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.lang.Math: double sin(double)>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.axes.NodeSequence: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Boolean: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap$Values: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.chrono.JapaneseDate: int hashCode()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ShortComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.Point: double getY()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.bcel.internal.classfile.Attribute: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: org.jfree.data.Range getYRange()>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.EnumMap: java.util.EnumMap clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ValuesView: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<sun.awt.image.InputStreamImageSource: void addConsumer(java.awt.image.ImageConsumer,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.PageAttributes: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setFont(java.awt.Font)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<jdk.internal.icu.impl.ReplaceableUCharacterIterator: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.entity.JFreeChartEntity: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<AbstractXYAnnotation: void <init>()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.lang.Math: void <clinit>()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<TextAnnotation: void <clinit>()>" -> "<org.jfree.chart.annotations.TextAnnotation: void <clinit>()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.block.RectangleConstraint: void <clinit>()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCodeForPaint(java.awt.Paint)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Shape readShape(java.io.ObjectInputStream)>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Object: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.SimpleAttributeSet: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.OffsetDateTime: boolean equals(java.lang.Object)>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.x509.GeneralSubtrees: java.lang.Object clone()>";
"<TextAnnotation: void setPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint)>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.RoundRectangle2D$Double: java.awt.geom.Rectangle2D getBounds2D()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory2()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void setTipRadius(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: java.awt.geom.AffineTransform getTransform()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: void setEncodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>" -> "<java.lang.Class: void <clinit>()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.ProcessHandleImpl: int hashCode()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<javax.swing.event.EventListenerList: void <init>()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.DefaultFormatter: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.util.BitArray: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Provides: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setArrowPaint(java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalExclusionType: java.awt.Dialog$ModalExclusionType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.data.category.DefaultCategoryDataset: int getColumnCount()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: char[] getPassword()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Byte: int hashCode()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Requires: int hashCode()>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void setOutlineStroke(java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Double: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger leftInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentSkipListMap clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.image.ToolkitImage: int getWidth(java.awt.image.ImageObserver)>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Exports: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Long: int hashCode()>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.GregorianCalendar: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.KeyedObject: java.lang.Object clone()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.Calendar: java.lang.Object clone()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.DefaultListSelectionModel: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<jdk.internal.icu.text.NormalizerBase: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.block.LabelBlock: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.HashMap: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setStroke(java.awt.Stroke)>";
"<javax.swing.text.html.InlineView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$Set12: void <init>(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.lang.String getText()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Double: int hashCode()>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.DateFormat: java.lang.Object clone()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder$Redirect$Type: java.lang.ProcessBuilder$Redirect$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JFileChooser: void setSelectedFiles(java.io.File[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.general.Series: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Double: double getWidth()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.sound.midi.MetaMessage: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setTransform(java.awt.geom.AffineTransform)>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.bcel.internal.generic.ClassGen: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.Duration: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setArrowStroke(java.awt.Stroke)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.font.AttributeValues: sun.font.AttributeValues clone()>";
"<sun.security.rsa.RSAUtil$KeyType: sun.security.rsa.RSAUtil$KeyType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.CharBuffer: int hashCode()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: org.jfree.data.Range getXRange()>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.util.Collection cloneAltNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.lang.Math: void <clinit>()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Integer: int hashCode()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.JFreeChart: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.util.Size2D: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.DefaultListSelectionModel: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void fill(java.awt.Shape)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void <init>(java.lang.Comparable,double,java.lang.Comparable,double,java.awt.Paint,java.awt.Stroke)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.data.KeyedObjects2D: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.ImmutableCollections$AbstractImmutableList: boolean contains(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean equals(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<CategoryLineAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable: java.lang.Object maps(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.TrayIcon$MessageType: java.awt.TrayIcon$MessageType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<XYTitleAnnotation: void setMaxWidth(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.font.FontLineMetrics: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processElementContent(com.sun.org.apache.xerces.internal.xni.QName)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: void <init>(java.lang.reflect.Method,java.beans.ParameterDescriptor[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult(java.lang.String)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setPaint(java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$NameMap: jdk.xml.internal.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.PeekGraphics: void fill(java.awt.Shape)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.datatransfer.MimeTypeParameterList: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.security.cert.X509CRLEntry: int hashCode()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<XYImageAnnotation: void <init>(double,double,java.awt.Image)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: void <init>(double,double,java.awt.Image,org.jfree.chart.util.RectangleAnchor)>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void setValue(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.IIOParam: int[] getSourceBands()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: void <clinit>()>" -> "<java.awt.Font: void <init>(java.lang.String,int,int)>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<sun.awt.util.IdentityLinkedList: boolean contains(java.lang.Object)>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Character: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Boolean: int hashCode()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.HijrahDate: boolean equals(java.lang.Object)>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void setNotify(boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.util.HashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.GeneralPath: void <init>()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.ExceptionConst$EXCS: com.sun.org.apache.bcel.internal.ExceptionConst$EXCS[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.Signature: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Thread$State: java.lang.Thread$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<javax.swing.text.DefaultCaret: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.charset.Charset: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: byte[] getEncodedParams()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<java.awt.BasicStroke: float[] getDashArray()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$Map1: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue2()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.bcel.internal.generic.CodeExceptionGen: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.ElementIterator: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.IntBuffer: int hashCode()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$BasicType: java.lang.invoke.LambdaForm$BasicType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: void setValue1(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.BitSet: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputFilter$Status: java.io.ObjectInputFilter$Status[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getTextAnchor()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCodeForPaint(java.awt.Paint)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setArrowPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.Properties: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setCategory2(java.lang.Comparable)>" -> "<java.lang.Throwable: void <clinit>()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>";
"<sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl: java.lang.Object clone()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.ArrayList: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.Signature: int addHashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Long: boolean equals(java.lang.Object)>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.Vector: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Line2D$Double: java.awt.geom.Rectangle2D getBounds2D()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.MessageDigestSpi: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Long: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: java.lang.Class[] canonicalizeAll(java.lang.Class[],int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setFont(java.awt.Font)>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void setArrowWidth(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Locale$FilteringMode: java.util.Locale$FilteringMode[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getPaint()>";
"<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageWriter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.swing.JPopupMenu: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.RectangularShape: java.lang.Object clone()>";
"<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void <clinit>()>" -> "<java.awt.Color: void <clinit>()>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void setArrowPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.stream.MatchOps$MatchKind: java.util.stream.MatchOps$MatchKind[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.util.Date: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setOutlineVisible(boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.category.DefaultCategoryDataset: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.DoubleBuffer: int hashCode()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setTextAnchor(org.jfree.chart.text.TextAnchor)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.security.x509.X509Key: byte[] encode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.axis.ValueAxis: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.GregorianCalendar: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.image.Kernel: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.ByteBuffer: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.module.ModuleDescriptor$Version: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.CharBuffer: int hashCode()>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<sun.awt.OSInfo$WindowsVersion: int hashCode()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>" -> "<java.awt.geom.Rectangle2D: int hashCode()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: int entryHashCode(int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.Status: com.sun.org.apache.xerces.internal.util.Status[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xml.internal.utils.BoolStack: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.MethodGen: java.lang.String[] getArgumentNames()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.Collator: java.lang.Object clone()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.awt.AppContext$State: sun.awt.AppContext$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.title.TextTitle: java.lang.Object clone()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.HashSet: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Ellipse2D$Double: java.awt.geom.Rectangle2D getBounds2D()>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void fill(java.awt.Shape)>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.XPath$LocationPath: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void setRotationAngle(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void translate(double,double)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.Extension: byte[] getValue()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.chrono.JapaneseDate: int hashCode()>";
"<org.jfree.chart.annotations.TextAnnotation: void <init>(java.lang.String)>" -> "<java.lang.Throwable: void <clinit>()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash$Entry search(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.Date: boolean equals(java.lang.Object)>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>" -> "<javax.swing.event.EventListenerList: void <clinit>()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setValue1(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.SimpleTimeZone: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xml.internal.utils.IntStack: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void draw(java.awt.Shape)>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XString: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.image.renderable.RenderContext: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYImageAnnotation: void <init>(double,double,java.awt.Image,org.jfree.chart.util.RectangleAnchor)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.entity.LegendItemEntity: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.DropMode: javax.swing.DropMode[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.imageio.plugins.png.PNGMetadata: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.timestamp.TSRequest: byte[] getHashedMessage()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xml.internal.utils.ObjectStack: java.lang.Object clone()>";
"<sun.util.PreHashedMap$2$1$1: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setFont(java.awt.Font)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.LocalTime: int hashCode()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.AffineTransform: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void draw(java.awt.Shape)>";
"<javax.swing.JEditorPane$PlainEditorKit: javax.swing.text.View create(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.security.spec.EncodedKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleProviderAdapter$Type: sun.util.locale.provider.LocaleProviderAdapter$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: java.util.EnumMap clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Double: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Comparable getCategory()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xalan.internal.xsltc.util.IntegerArray: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.cert.PKIXParameters: java.lang.Object clone()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSplitPane: void addImpl(java.awt.Component,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.Enum: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$StringValue: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.cert.CollectionCertStoreParameters: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setFont(java.awt.Font)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.KeyboardManager$ComponentKeyStrokePair: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void fill(java.awt.Shape)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xpath.internal.axes.WalkingIterator: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void setMaxHeight(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>" -> "<org.jfree.chart.plot.Plot: void annotationChanged(org.jfree.chart.event.AnnotationChangeEvent)>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.org.apache.xpath.internal.axes.FilterExprWalker: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.Thread: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.AbstractPoller$RequestType: sun.nio.fs.AbstractPoller$RequestType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: java.awt.geom.AffineTransform getTransform()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: byte[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Locale$IsoCountryCode: java.util.Locale$IsoCountryCode[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.Map)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.Collector$Characteristics: java.util.stream.Collector$Characteristics[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.util.GregorianCalendar: int hashCode()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLLimitAnalyzer$NameMap: jdk.xml.internal.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.gif.GIFImageMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean contains(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.cert.X509CertSelector: java.lang.Object clone()>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileVisitResult: java.nio.file.FileVisitResult[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.AbstractAction: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: int[] getDestinationBands()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int hashCodeOfRange(java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Requires$Modifier: java.lang.module.ModuleDescriptor$Requires$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.Point: double getX()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.entity.StandardEntityCollection: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.provider.DigestBase: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: void derEncode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Paint readPaint(java.io.ObjectInputStream)>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: int hashCode()>" -> "<java.lang.Double: long doubleToLongBits(double)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.LocalDateTime: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.JPEGMetadata: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.time.Month: java.time.Month[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.chrono.MinguoDate: int hashCode()>";
"<java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.regex.Match: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.math.BigDecimal: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.awt.geom.Path2D: void <clinit>()>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.color.ICC_Profile: byte[] getData(int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.ClassSpecializer$SpeciesData: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$KeyPair: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.image.ImageFilter: java.lang.Object clone()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.NumericShaper$Range: java.awt.font.NumericShaper$Range[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS7: java.security.cert.X509CRL[] getCRLs()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYDrawableAnnotation: void <init>(double,double,double,double,org.jfree.chart.Drawable)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: void <init>(double,double,double,double,double,org.jfree.chart.Drawable)>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$MapN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.awt.datatransfer.ClipboardTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: void setStroke(java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<sun.swing.SwingUtilities2$KeyPair: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.TextAnnotation: void setFont(java.awt.Font)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.util.ShapeUtilities: void <clinit>()>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void draw(java.awt.Shape)>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: byte[] getIdentifier()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.io.File: int hashCode()>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.PrinterStateReason: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Class[] getInterfaces(boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.OtherName: byte[] getNameValue()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.net.www.MimeEntry: java.lang.Object clone()>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<XYTitleAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.ref.Reference: java.lang.Object clone()>";
"<java.lang.invoke.SerializedLambda: void <init>(java.lang.Class,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>";
"<java.nio.file.AccessMode: java.nio.file.AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.ThaiBuddhistDate: boolean equals(java.lang.Object)>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator[] getGDVs()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Collections$CopiesList: boolean contains(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void draw(java.awt.Shape)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.IIOParam: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.DigitList: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget: sun.reflect.'annotation'.TypeAnnotation$TypeAnnotationTarget[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.ChronoZonedDateTimeImpl: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipEntry: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.LongBuffer: int hashCode()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.metadata.IIOMetadata: java.lang.String[] getExtraMetadataFormatNames()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.JFormattedTextField$AbstractFormatter: java.lang.Object clone()>";
"<java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.RowFilter$ComparisonType: javax.swing.RowFilter$ComparisonType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setTextAnchor(org.jfree.chart.text.TextAnchor)>" -> "<java.lang.Throwable: void <clinit>()>";
"<javax.swing.text.html.HTMLDocument$HTMLReader: void handleText(char[],int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Point2D$Double: double getX()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.DigitList: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.image.MultiResolutionCachedImage: int getWidth(java.awt.image.ImageObserver)>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.ClassDesc[] parameterArray()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.util.AbstractObjectList: java.lang.Object clone()>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.logging.PlatformLogger$Level: sun.util.logging.PlatformLogger$Level[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferInt: int[][] getBankData()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint getPaint()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointMap$RangeOption: jdk.internal.icu.util.CodePointMap$RangeOption[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.renderer.AbstractRenderer: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.util.calendar.CalendarDate: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: boolean matchesKey(java.util.WeakHashMap$Entry,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: double getRotationAngle()>";
"<java.util.concurrent.CopyOnWriteArrayList: void sortRange(java.util.Comparator,int,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBankIndices()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl: java.lang.Object clone()>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Path2D: void closePath()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.XYPlot: boolean removeAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void removeChangeListener(org.jfree.chart.event.AnnotationChangeListener)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>";
"<java.util.ArrayList: int hashCodeRange(int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.image.DataBufferDouble: double[][] getBankData()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<jdk.internal.math.FDBigInteger: jdk.internal.math.FDBigInteger rightInplaceSub(jdk.internal.math.FDBigInteger)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.font.FontRenderContext: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.GregorianCalendar: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: void <init>(double[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.text.MessageFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.FormSubmitEvent$MethodType: javax.swing.text.html.FormSubmitEvent$MethodType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X500Name: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<sun.security.x509.X509CertImpl: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CryptoPrimitive: java.security.CryptoPrimitive[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.CSS$FontWeight: java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin: javax.swing.text.html.StyleSheet$BoxPainter$HorizontalMargin[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.security.cert.PKIXReason: java.security.cert.PKIXReason[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void <init>(java.awt.Image,double,double,double,double,boolean)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.text.CompactByteArray: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.swing.CachedPainter$PainterMultiResolutionCachedImage: int getHeight(java.awt.image.ImageObserver)>";
"<sun.security.x509.X500Name: void <init>(sun.security.x509.RDN[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$2: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.ShortBuffer: int hashCode()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>";
"<java.lang.reflect.Proxy: java.lang.reflect.Constructor getProxyConstructor(java.lang.Class,java.lang.ClassLoader,java.lang.Class[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.CharBuffer: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntry: int hash(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.SoftCache$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Indexed: void <init>(byte[],byte[],byte[],byte[],int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: void setPackages(java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: void put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int lastIndexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<XYPointerAnnotation: void setBaseRadius(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.nio.file.FileVisitOption: java.nio.file.FileVisitOption[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLContentSpec: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setArrowPaint(java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.LambdaForm$Name emitSelectAlternative(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.JobAttributes: java.lang.Object clone()>";
"<java.lang.StackWalker$Option: java.lang.StackWalker$Option[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.java2d.SunGraphics2D: void fill(java.awt.Shape)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: float[][] getBankData()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DirectMethodHandleDesc$Kind: java.lang.constant.DirectMethodHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2: float drawChars(javax.swing.JComponent,java.awt.Graphics,char[],int,int,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<java.awt.geom.Path2D$Float: void moveTo(float,float)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PathGraphics: void draw(java.awt.Shape)>";
"<javax.print.attribute.standard.MediaTray: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.net.Proxy$Type: java.net.Proxy$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.SWITCH: void <init>(int[],com.sun.org.apache.bcel.internal.generic.InstructionHandle[],com.sun.org.apache.bcel.internal.generic.InstructionHandle,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.JTable$PrintMode: javax.swing.JTable$PrintMode[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.ElementPSVI)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReader: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: int hashCode()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.font.StyledParagraph: int[] addToVector(java.lang.Object,int,java.util.Vector,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.nio.file.attribute.AclEntryFlag: java.nio.file.attribute.AclEntryFlag[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void <init>(java.lang.String,java.lang.Comparable,double)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Taskbar$Feature: java.awt.Taskbar$Feature[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.font.FontLineMetrics: float[] getBaselineOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.RDN: void <init>(sun.security.x509.AVA[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JFileChooser: java.io.File[] getSelectedFiles()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.util.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<javax.swing.table.DefaultTableColumnModel: int getColumnIndex(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.AttributeValues: sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.TextAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: void <init>(double,double,org.jfree.chart.title.Title,org.jfree.chart.util.RectangleAnchor)>";
"<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.lang.StackStreamFactory$WalkerState: java.lang.StackStreamFactory$WalkerState[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.io.ObjectInputStream: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.windows.EHTMLReadMode: sun.awt.windows.EHTMLReadMode[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.DefaultComboBoxModel: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: boolean isEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Locale[] getAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: boolean memberValueEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.CRLReason: java.security.cert.CRLReason[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.PeekGraphics: void setFont(java.awt.Font)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.RescaleOp: float[] getOffsets(float[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.x509.GeneralSubtrees: java.lang.Object clone()>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Class class$(java.lang.String)>" -> "<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setColorMap(char[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<org.jfree.chart.axis.TickUnit: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getSampleSize()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.font.CharArrayIterator: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl: java.lang.Object[] validRestrictionOf(java.lang.String,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.objects.XStringForFSB: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.provider.SHA3: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBuffer: int[] getOffsets()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.finder.InstanceFinder: void <init>(java.lang.Class,boolean,java.lang.String,java.lang.String[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<XYDataImageAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.RegisteredDomain$Type: sun.security.util.RegisteredDomain$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceName(java.lang.invoke.LambdaForm$Name,java.lang.invoke.LambdaForm$Name)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XSConstraints: void checkNameAndTypeOK(com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int,com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.JumboEnumSet: java.util.EnumSet clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.imageio.plugins.tiff.TIFFField: javax.imageio.plugins.tiff.TIFFField clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamOpFlag$Type: java.util.stream.StreamOpFlag$Type[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object putItem(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.attribute.AclEntryPermission: java.nio.file.attribute.AclEntryPermission[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setPaint(java.awt.Paint)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double)>" -> "<java.awt.BasicStroke: void <init>(float)>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.EnumSet: java.util.EnumSet clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ByteInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: int normalize()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.awt.font.StyledParagraph: java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator,char[],int,java.awt.font.StyledParagraph)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,float,float,boolean)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap$SimpleEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type: javax.swing.MultiUIDefaults$MultiUIDefaultsEnumerator$Type[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandleImpl$Intrinsic: java.lang.invoke.MethodHandleImpl$Intrinsic[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Integer: int hashCode()>";
"<com.sun.beans.util.Cache$CacheEntry: boolean matches(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.FileDialog: java.io.File[] getFiles()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.beans.EventSetDescriptor: java.beans.MethodDescriptor[] getListenerMethodDescriptors()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: int indexOfRange(java.lang.Object,java.lang.Object[],int,int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<sun.util.BuddhistCalendar: int hashCode()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void <init>(java.awt.Image,double,double,double,double,boolean)>" -> "<java.lang.Throwable: void <clinit>()>";
"<org.jfree.data.KeyedObject: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.chrono.ThaiBuddhistEra: java.time.chrono.ThaiBuddhistEra[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: void reconstitutionPut(java.util.Hashtable$Entry[],java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.util.SerialUtilities: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint getPaint()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.MonthDay: int hashCode()>";
"<java.lang.invoke.LambdaForm$Kind: java.lang.invoke.LambdaForm$Kind[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageWriter$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.OSInfo$OSType: sun.awt.OSInfo$OSType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.beans.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthScheme: sun.net.www.protocol.http.AuthScheme[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.nio.ByteBuffer: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.entity.PlotEntity: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitMasks()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.text.DefaultEditorKit: javax.swing.Action[] getActions()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.Arrays$ArrayList: boolean contains(java.lang.Object)>";
"<java.util.Hashtable: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JSpinner$DefaultEditor: void propertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.SwingWorker$StateValue: javax.swing.SwingWorker$StateValue[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setPaint(java.awt.Paint)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void fill(java.awt.Shape)>";
"<sun.awt.Win32GraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.ElementIterator$StackItem: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: void <init>(int,int,int,int,int,int[],int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.plot.Marker: java.lang.Object clone()>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: int memberValueHashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<sun.reflect.generics.repository.GenericDeclRepository: java.lang.reflect.TypeVariable[] getTypeParameters()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<javax.xml.catalog.CatalogFeatures$State: javax.xml.catalog.CatalogFeatures$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JPEGImageWriter: java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam,javax.imageio.metadata.IIOMetadata,javax.imageio.metadata.IIOMetadata)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageMetadata: javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: int contains(com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.xerces.internal.impl.xpath.XPath$Step: java.lang.Object clone()>";
"<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.tree.DefaultMutableTreeNode: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getACHuffmanTables()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setArrowStroke(java.awt.Stroke)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void <init>(double,double,java.awt.Image,org.jfree.chart.util.RectangleAnchor)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.util.Vector: void writeObject(java.io.ObjectOutputStream)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.TextLabelFactory: void <init>(java.awt.font.FontRenderContext,char[],java.text.Bidi,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void <init>(java.lang.String,java.lang.Comparable,double,double)>" -> "<java.awt.Color: void <clinit>()>";
"<javax.swing.text.SimpleAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.TextAnnotation: void setTextAnchor(org.jfree.chart.text.TextAnchor)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Taskbar$State: java.awt.Taskbar$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.net.www.http.KeepAliveKey: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.image.RescaleOp: float[] getScaleFactors(float[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Locale$Category: java.util.Locale$Category[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<XYLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.text.MessageFormat: java.lang.Object clone()>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getBackgroundPaint()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.MarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.AbstractCollection: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.HashUtilities: int hashCode(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.crypto.CryptoPermission: boolean equalObjects(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.print.Paper: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<sun.swing.text.TextComponentPrintable$IntegerSegment: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.util.CodePointTrie$Type: jdk.internal.icu.util.CodePointTrie$Type[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.event.FocusEvent$Cause: java.awt.event.FocusEvent$Cause[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$VarHandleDesc$Kind: java.lang.invoke.VarHandle$VarHandleDesc$Kind[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.AbstractCollection: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageTypeSpecifier$Interleaved: void <init>(java.awt.color.ColorSpace,int[],int,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.time.LocalDate: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.AttributedString$AttributedStringIterator: java.lang.Object clone()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.time.chrono.HijrahEra: java.time.chrono.HijrahEra[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.swing.JList: void setPrototypeCellValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object,java.util.Locale)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.lang.invoke.LambdaForm: void <init>(int,java.lang.invoke.LambdaForm$Name[],int,boolean,java.lang.invoke.MethodHandle,java.lang.invoke.LambdaForm$Kind)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.reflect.'annotation'.AnnotationInvocationHandler: java.lang.Object cloneArray(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.jmod.JmodFile$Section: jdk.internal.jmod.JmodFile$Section[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Enum: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.text.RuleBasedBreakIterator$SafeCharIterator: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte,byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessType: java.lang.invoke.VarHandle$AccessType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void setFont(java.awt.Font)>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void <init>(double,double,java.awt.Image)>" -> "<org.jfree.chart.util.RectangleAnchor: void <clinit>()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<javax.swing.ClientPropertyKey: javax.swing.ClientPropertyKey[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.security.util.DerValue: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setExtraSamples(int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object replace(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.function.Predicate: boolean lambda$isEqual$3(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.font.AttributeValues: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.bmp.BMPCompressionTypes: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object removeItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.plot.CategoryPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.data.xy.XYSeries: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: java.lang.String[] getCompressionQualityDescriptions()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.beans.ChangeListenerMap: java.util.EventListener[] getListeners(java.lang.String)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void setPropertiesFromAttributes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder: sun.java2d.cmm.lcms.LCMSImageLayout$BandOrder[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: void <init>(java.util.EnumMap)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.geom.Point2D: java.lang.Object clone()>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CRLImpl: byte[] getTBSCertList()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<sun.java2d.StateTrackable$State: sun.java2d.StateTrackable$State[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.Date: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.DecimalFormat: java.lang.Object clone()>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.StackWalker$ExtendedOption: java.lang.StackWalker$ExtendedOption[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyIdentifier: void <init>(byte[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.jar.Manifest: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.util.SerialUtilities: java.awt.Stroke readStroke(java.io.ObjectInputStream)>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<org.jfree.chart.util.ArrayUtilities: boolean hasDuplicateItems(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Toolkit$DesktopPropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<java.util.Formatter$BigDecimalLayoutForm: java.util.Formatter$BigDecimalLayoutForm[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$NameMap[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.SignatureSpi: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$KeyBuilder: void removeSearchAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.Object: java.lang.String toString()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.awt.font.StyledParagraph: void addFont(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[],java.lang.String,java.security.spec.AlgorithmParameterSpec)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects2D: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.nio.file.LinkOption: java.nio.file.LinkOption[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.nio.file.attribute.AclEntryType: java.nio.file.attribute.AclEntryType[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageWriterSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.awt.image.ByteComponentRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.FloatBuffer: int hashCode()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle constant(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector$GlyphTransformInfo: void <init>(sun.font.StandardGlyphVector,sun.font.StandardGlyphVector$GlyphTransformInfo)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.util.Size2D: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.MessageFormat: java.lang.Object clone()>";
"<java.awt.image.DataBufferDouble: void <init>(double[][],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.Collections$CheckedCollection: java.util.Collection checkedCopyOf(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.swing.event.RowSorterEvent$Type: javax.swing.event.RowSorterEvent$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setBitsPerSample(int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.LayoutStyle$ComponentPlacement: javax.swing.LayoutStyle$ComponentPlacement[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.sound.midi.ShortMessage: java.lang.Object clone()>";
"<java.util.Vector: int indexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandleImpl$ArrayAccess: java.lang.invoke.MethodHandleImpl$ArrayAccess[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.java2d.d3d.D3DGraphicsDevice: java.awt.GraphicsConfiguration[] getConfigurations()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: int lastIndexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.JFreeChart: boolean getAntiAlias()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void initialize(javax.imageio.ImageTypeSpecifier,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: void copyBootstrapMethods(jdk.internal.org.objectweb.asm.ClassReader,char[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: int hashCode()>";
"<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: void setDecodeTables(javax.imageio.plugins.jpeg.JPEGQTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[],javax.imageio.plugins.jpeg.JPEGHuffmanTable[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.block.BlockContainer: java.lang.Object clone()>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int hashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.internal.reflect.ConstantPool$Tag: jdk.internal.reflect.ConstantPool$Tag[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.net.ssl.SNIServerName: void <init>(int,byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.text.AttributeEntry: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<java.util.AbstractCollection: boolean contains(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.IdentityHashMap: java.lang.Object clone()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.data.category.DefaultCategoryDataset: int getColumnIndex(java.lang.Comparable)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<AbstractAnnotation: java.lang.Object clone()>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.font.StandardGlyphVector: void setGlyphPositions(float[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.module.ModuleDescriptor$Opens: int hashCode()>";
"<java.awt.desktop.QuitStrategy: java.awt.desktop.QuitStrategy[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: double getX()>";
"<com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.lang.constant.MethodTypeDescImpl: java.lang.constant.MethodTypeDesc changeParameterType(int,java.lang.constant.ClassDesc)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.lang.Character$UnicodeScript: java.lang.Character$UnicodeScript[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.lang.Double: void <clinit>()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>" -> "<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void annotationChanged(org.jfree.chart.event.AnnotationChangeEvent)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: void <init>(java.lang.Comparable,double,java.lang.Comparable,double,java.awt.Paint,java.awt.Stroke)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<javax.swing.text.TextLayoutStrategy: int layoutRow(javax.swing.text.FlowView,int,int)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.ImageIO$SpiInfo: javax.imageio.ImageIO$SpiInfo[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Vector: int lastIndexOf(java.lang.Object,int)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.AbstractDocument: void handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.Comparators$NaturalOrderComparator: java.util.Comparators$NaturalOrderComparator[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.reflect.Constructor[] copyConstructors(java.lang.reflect.Constructor[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.math.BigInteger: java.math.BigInteger getRadixConversionCache(int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.spec.EncodedKeySpec: void <init>(byte[],java.lang.String)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYLineAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType: com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<jdk.internal.icu.util.CodePointTrie$ValueWidth: jdk.internal.icu.util.CodePointTrie$ValueWidth[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.net.ProgressSource$State: sun.net.ProgressSource$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.Class[] parameterArray()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.beans.finder.InstanceFinder: java.lang.String[] getPackages()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYDrawableAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void translate(double,double)>";
"<java.time.temporal.ChronoField: java.time.temporal.ChronoField[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.LinkedBlockingQueue: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<XYPointerAnnotation: void setArrowLength(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.temporal.JulianFields$Field: java.time.temporal.JulianFields$Field[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.net.StandardProtocolFamily: java.net.StandardProtocolFamily[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.lang.String readString(java.nio.file.Path,java.nio.charset.Charset)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.DecimalFormatSymbols: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.block.BlockContainer: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.nio.file.FileTreeWalker: boolean wouldLoop(java.nio.file.Path,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.MessageDigest$Delegate: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<XYPointerAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.util.Cache: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.plot.PlotOrientation: void <clinit>()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall$JavaType: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<XYDrawableAnnotation: void <init>(double,double,double,double,double,org.jfree.chart.Drawable)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.font.Decoration$DecorationImpl: boolean areEqual(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.DateTimeFormatterBuilder$SettingsParser: java.time.format.DateTimeFormatterBuilder$SettingsParser[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.text.ChoiceFormat: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.StringCharBuffer: boolean equals(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.UIDefaults$ProxyLazyValue: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType: sun.java2d.pipe.hw.ExtendedBufferCapabilities$VSyncType[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.text.NumberFormat$Style: java.text.NumberFormat$Style[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.swing.text.GlyphView: java.lang.Object clone()>";
"<javax.print.attribute.standard.JobSheets: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.AbstractWatchKey$State: sun.nio.fs.AbstractWatchKey$State[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.util.Map getOcspResponses()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: int showInternalOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferFloat: void <init>(float[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup defineHiddenClassWithClassData(byte[],java.lang.Object,boolean,java.lang.invoke.MethodHandles$Lookup$ClassOption[])>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ArrayList: int indexOfRange(java.lang.Object,int,int)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: void <init>(java.security.PrivateKey,java.security.cert.Certificate[],java.util.Set)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.desktop.UserSessionEvent$Reason: java.awt.desktop.UserSessionEvent$Reason[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.CSS: javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>";
"<sun.util.PreHashedMap$2$1$1: int hashCode()>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.lang.Math: float abs(float)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$ValueStoreBase: boolean contains()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.awt.List: int[] getSelectedIndexes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaSizeName: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.CertPathValidatorException$BasicReason: java.security.cert.CertPathValidatorException$BasicReason[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MemberName$Factory: java.util.List getMembers(java.lang.Class,java.lang.String,java.lang.Object,int,java.lang.Class)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.KeyValueHolder: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.AbstractMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.EventFilter$FilterAction: java.awt.EventFilter$FilterAction[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.Vector: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.regex.Pattern$Qtype: java.util.regex.Pattern$Qtype[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.nio.file.attribute.FileTime: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap$Entry: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setOutlinePaint(java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<org.jfree.chart.annotations.AbstractAnnotation: boolean hasListener(java.util.EventListener)>" -> "<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl$3: boolean contains(java.lang.Object)>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void setArrowWidth(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<java.awt.image.DataBuffer: void <init>(sun.java2d.StateTrackable$State,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.logger.LoggerFinderLoader$ErrorPolicy: jdk.internal.logger.LoggerFinderLoader$ErrorPolicy[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: float[] getCompressionQualityValues()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.ProcessHandleImpl: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageWriteParam: java.lang.String[] getCompressionTypes()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: void processOneAttribute(com.sun.org.apache.xerces.internal.xni.QName,com.sun.org.apache.xerces.internal.xni.XMLAttributes,int,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl,com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl,com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<javax.swing.DefaultCellEditor$2: void setValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: int hashCode()>";
"<XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferUShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.io.File: int hashCode()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>";
"<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setPaint(java.awt.Paint)>";
"<jdk.internal.module.ModulePath: void <init>(java.lang.Runtime$Version,boolean,jdk.internal.module.ModulePatcher,java.nio.file.Path[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.java2d.SunGraphics2D: void draw(java.awt.Shape)>";
"<org.jfree.chart.annotations.XYImageAnnotation: void readObject(java.io.ObjectInputStream)>" -> "<java.io.ObjectInputStream: void defaultReadObject()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.security.provider.SHA3: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.font.LayoutPathImpl$EndType: sun.font.LayoutPathImpl$EndType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.AbstractMap: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.geom.QuadCurve2D: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.JComboBox: int getSelectedIndex()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.lang.'annotation'.ElementType: java.lang.'annotation'.ElementType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Exports$Modifier: java.lang.module.ModuleDescriptor$Exports$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: void setPaint(java.awt.Paint)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<com.sun.org.apache.bcel.internal.classfile.JavaClass: boolean equals(java.lang.Object)>";
"<javax.swing.ArrayTable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Desktop$Action: java.awt.Desktop$Action[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.ArrayTable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<java.security.cert.X509CRLSelector: void addIssuerName(byte[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.MessageDigest$Delegate: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttribute(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.util.ObjectIdentifier: byte[] pack(byte[],int,int,int,int)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.ComponentSampleModel: int[] getBandOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFImageWriter: void setupMetadata(java.awt.image.ColorModel,java.awt.image.SampleModel,int,int)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSourceBands(int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<javax.print.attribute.EnumSyntax: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.Point: double getY()>";
"<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.introspect.PropertyInfo$Name: com.sun.beans.introspect.PropertyInfo$Name[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.swing.ImageCache$Entry: boolean equals(java.awt.GraphicsConfiguration,int,int,java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderSpi: void <init>(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.Class[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.awt.print.Paper: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl: void <init>(boolean,com.sun.org.apache.xerces.internal.xs.AttributePSVI)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.parsers.DOMParserImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.IndexColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: short[][] getBankData()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.SOSMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneOffsetTransitionRule$TimeDefinition: java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void focusLost(java.awt.event.FocusEvent)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.text.TextAnchor getRotationAnchor()>";
"<java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: void setNameConstraints(byte[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.text.CompactNumberFormat: java.text.CompactNumberFormat clone()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: int hashCode()>";
"<sun.security.util.DomainName$Rule$Type: sun.security.util.DomainName$Rule$Type[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.Window$Type: java.awt.Window$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.security.auth.Subject$SecureSet: boolean removeAll(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<java.time.zone.ZoneRules: java.lang.Object getOffsetInfo(java.time.LocalDateTime)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JMenuBar: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.NamedCurve: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: int hashCode()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>" -> "<java.awt.geom.Ellipse2D: int hashCode()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.text.SimpleDateFormat: java.lang.Object clone()>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType changeParameterType(int,java.lang.Class)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.time.temporal.IsoFields$Field: java.time.temporal.IsoFields$Field[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.metadata.IIOMetadata: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.bcel.internal.classfile.JavaClass: com.sun.org.apache.bcel.internal.classfile.JavaClass copy()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.data.KeyedObjects: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Component: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PasswordProtection: void <init>(char[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus: java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.SinglePixelPackedSampleModel: void <init>(int,int,int,int,int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.beans.WeakIdentityMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.swing.SortOrder: javax.swing.SortOrder[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.net.www.MessageHeader: void print(java.io.PrintStream)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.validator.CADistrustPolicy: sun.security.validator.CADistrustPolicy[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.zip.ZipFile$Source$Key: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.security.cert.CollectionCertStoreParameters: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.PaintUtilities: boolean equal(java.awt.Paint,java.awt.Paint)>";
"<jdk.internal.icu.text.UnicodeSet$SpanCondition: jdk.internal.icu.text.UnicodeSet$SpanCondition[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: java.util.Set cloneAndCheckNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: void replaceAllRange(java.util.function.UnaryOperator,int,int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.time.chrono.MinguoEra: java.time.chrono.MinguoEra[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<javax.xml.catalog.CatalogFeatures$Feature: javax.xml.catalog.CatalogFeatures$Feature[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<sun.reflect.generics.repository.ClassRepository: java.lang.reflect.Type[] getSuperInterfaces()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker$Option: java.security.cert.PKIXRevocationChecker$Option[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.security.x509.KeyUsageExtension: boolean[] getBits()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.awt.windows.WPathGraphics: void draw(java.awt.Shape)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: java.util.ArrayList cloneBytesArrayList(java.util.ArrayList)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<sun.net.www.protocol.http.HttpURLConnection$TunnelState: sun.net.www.protocol.http.HttpURLConnection$TunnelState[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State: com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.SortingFocusTraversalPolicy: void legacySort(java.util.List,java.util.Comparator)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<XYDataImageAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.lang.Character: int hashCode()>";
"<javax.swing.plaf.basic.BasicComboBoxUI$Handler: void actionPerformed(java.awt.event.ActionEvent)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.awt.Dialog$ModalityType: java.awt.Dialog$ModalityType[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void fill(java.awt.Shape)>";
"<java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.png.PNGMetadata: org.w3c.dom.Node getNativeTree()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.png.PNGMetadata: void mergeNativeTree(org.w3c.dom.Node)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit: com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertImpl: byte[] getSignature()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.imageio.ImageReadParam: void setDestinationBands(int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void writeObject(java.io.ObjectOutputStream)>" -> "<java.io.ObjectOutputStream: void defaultWriteObject()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.beans.editors.EnumEditor: java.lang.String[] getTags()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.security.spec.EllipticCurve: byte[] getSeed()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void <init>(java.lang.String,java.lang.Comparable,double,double)>" -> "<java.awt.BasicStroke: void <init>(float)>";
"<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.util.ObjectUtilities: void <clinit>()>";
"<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<sun.swing.SwingUtilities2$Section: sun.swing.SwingUtilities2$Section[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.JFreeChart: void setAntiAlias(boolean)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.time.temporal.IsoFields$Unit: java.time.temporal.IsoFields$Unit[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.security.spec.ECFieldF2m: void <init>(int,int[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.time.format.SignStyle: java.time.format.SignStyle[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.MediaTray: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Objects: int hashCode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>";
"<javax.swing.JTree: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Set12: int hashCode()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis)>" -> "<sun.print.PathGraphics: void draw(java.awt.Shape)>";
"<java.io.File$PathStatus: java.io.File$PathStatus[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.nio.ShortBuffer: int hashCode()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int,int[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.lang.ProcessHandleImpl: boolean equals(java.lang.Object)>";
"<jdk.internal.icu.text.UnicodeSet: jdk.internal.icu.text.UnicodeSet set(jdk.internal.icu.text.UnicodeSet)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.net.Inet6Address: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.util.ObjectUtilities: java.lang.Object clone(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<sun.security.x509.AlgorithmId: void decodeParams()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV$ListData: int hashCode()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.awt.GraphicsDevice$WindowTranslucency: java.awt.GraphicsDevice$WindowTranslucency[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.Arrays: int deepHashCode(java.lang.Object[])>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDProcessor: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.awt.image.PackedColorModel: int[] getMasks()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.ObjectListImpl: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.net.Inet6Address: byte[] getAddress()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue1()>";
"<java.util.HashMap: java.util.HashMap$Node getNode(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.datatransfer.MimeType: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.Signature: java.lang.Object clone()>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYTextAnnotation: void setY(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<java.util.concurrent.ConcurrentHashMap$Node: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkProperty$State: jdk.xml.internal.JdkProperty$State[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.XMLEntityManager: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.text.html.HTMLDocument: javax.swing.text.Element getElement(javax.swing.text.Element,java.lang.Object,java.lang.Object,boolean)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodTypeForm: void <init>(java.lang.invoke.MethodType)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.Rectangle2D$Double: java.awt.geom.Rectangle2D getBounds2D()>";
"<java.awt.image.DataBufferShort: void <init>(short[][],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<sun.security.provider.SHA3$SHA512: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.security.cert.PKIXRevocationChecker: java.security.cert.PKIXRevocationChecker clone()>";
"<XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void fill(java.awt.Shape)>";
"<java.awt.datatransfer.StringSelection: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.util.SymbolHash: com.sun.org.apache.xerces.internal.util.SymbolHash makeClone()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getURL()>";
"<java.time.DayOfWeek: java.time.DayOfWeek[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.ProcessBuilder: java.lang.Process start(java.lang.ProcessBuilder$Redirect[])>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.COMMarkerSegment: javax.imageio.metadata.IIOMetadataNode getNativeNode()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.StyleContext$SmallAttributeSet: java.lang.Object getLocalAttribute(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry: java.security.cert.Certificate[] getCertificates()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<sun.security.pkcs.PKCS9Attribute: int indexOf(java.lang.Object,java.lang.Object[],int)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.BitArray: byte[] toByteArray()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.util.KnownOIDs: sun.security.util.KnownOIDs[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.awt.font.TextMeasurer: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale[] getAllAvailableLocales()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.util.JapaneseImperialCalendar: java.lang.Object clone()>";
"<com.sun.beans.util.Cache$Kind: com.sun.beans.util.Cache$Kind[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.crypto.SealedObject: void <init>(javax.crypto.SealedObject)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterRepeatedArgument(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int[])>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.XMLSecurityManager$Limit: jdk.xml.internal.XMLSecurityManager$Limit[] values()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$MapN: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<com.sun.imageio.plugins.jpeg.SOFMarkerSegment: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeLastOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.chrono.ChronoLocalDateTimeImpl: boolean equals(java.lang.Object)>";
"<java.util.PriorityQueue: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.invoke.util.BytecodeName: java.lang.String unparseBytecodeName(java.lang.Object[])>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Arrays: void legacyMergeSort(java.lang.Object[],java.util.Comparator)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.time.format.FormatStyle: java.time.format.FormatStyle[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: int hashCode()>";
"<javax.print.attribute.standard.JobSheets: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int probe(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<CategoryTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.TextAnnotation: double getRotationAngle()>";
"<java.lang.System$Logger$Level: java.lang.System$Logger$Level[] values()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferByte: void <init>(byte[][],int)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.constant.DynamicConstantDesc: java.lang.constant.ConstantDesc[] bootstrapArgs()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.util.EnumMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.IPAddressName: byte[] getBytes()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.repository.ConstructorRepository: java.lang.reflect.Type[] getParameterTypes()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.lang.String getText()>";
"<sun.security.x509.X509CRLEntryImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>" -> "<java.util.JapaneseImperialCalendar: int hashCode()>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.PeekGraphics: void draw(java.awt.Shape)>";
"<java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<sun.text.IntHashtable: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDAttributeTraverser: com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDocumentInfo,com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar,com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: int hashCode()>";
"<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.internal.jimage.decompressor.StringSharingDecompressor: int[] getSizes()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: double getRotationAngle()>";
"<java.util.stream.StreamShape: java.util.stream.StreamShape[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: int hashCode()>";
"<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.XMLSecurityManager$Processor: jdk.xml.internal.XMLSecurityManager$Processor[] values()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.swing.text.AbstractDocument: void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<sun.net.www.protocol.http.AuthCacheValue$Type: sun.net.www.protocol.http.AuthCacheValue$Type[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>";
"<java.util.WeakHashMap: int hash(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>" -> "<java.time.LocalDate: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.CategoryTextAnnotation: int hashCode()>" -> "<java.time.LocalDateTime: int hashCode()>";
"<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.axis.TickUnit: boolean equals(java.lang.Object)>";
"<java.util.AbstractList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: int hashCode()>";
"<java.util.Collections$CopiesList: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.bcel.internal.generic.Select: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.internal.org.objectweb.asm.SymbolTable: jdk.internal.org.objectweb.asm.Symbol addBootstrapMethod(jdk.internal.org.objectweb.asm.Handle,java.lang.Object[])>" -> "<org.jfree.chart.annotations.TextAnnotation: int hashCode()>";
"<java.lang.module.ModuleDescriptor$Opens$Modifier: java.lang.module.ModuleDescriptor$Opens$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.security.x509.X509CRLImpl: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<org.jfree.chart.axis.AxisSpace: java.lang.Object clone()>";
"<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: void <clinit>()>" -> "<java.awt.Color: void <clinit>()>";
"<sun.font.ExtendedTextSourceLabel: sun.font.TextLineComponent applyJustificationDeltas(float[],int,boolean[])>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property: com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager$Property[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.beans.MethodDescriptor: java.beans.ParameterDescriptor[] getParameterDescriptors()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<jdk.internal.math.FormattedFloatingDecimal$Form: jdk.internal.math.FormattedFloatingDecimal$Form[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap: com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer$NameMap[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object compute(java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator: boolean isIdentical(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.xinclude.XIncludeHandler: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State: com.sun.imageio.plugins.jpeg.JPEGImageReader$CallBackLock$State[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.awt.image.ShortBandedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean getIncludeInDataBounds()>";
"<com.sun.org.apache.xpath.internal.objects.XObject: boolean equals(com.sun.org.apache.xpath.internal.objects.XObject)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void beginDecoding()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<javax.swing.text.ParagraphView: void <init>(javax.swing.text.Element)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodType: java.lang.invoke.MethodType asSpreaderType(java.lang.Class,int,int)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: org.jfree.chart.util.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xpath.internal.VariableStack: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<sun.awt.image.IntegerInterleavedRaster: int[] getDataOffsets()>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrinterStateReason: javax.print.attribute.EnumSyntax[] getEnumValueTable()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl: void checkFacets(com.sun.org.apache.xerces.internal.impl.dv.ValidatedInfo)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<javax.swing.text.html.HTMLEditorKit: java.lang.Object clone()>";
"<XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Paint getPaint()>";
"<java.util.concurrent.ConcurrentSkipListMap$SubMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$PreferType: javax.xml.catalog.GroupEntry$PreferType[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: void <init>(double[],java.awt.Stroke,java.awt.Paint,java.awt.Paint)>" -> "<java.awt.ImageCapabilities: java.lang.Object clone()>";
"<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>" -> "<javax.swing.event.EventListenerList: void <init>()>";
"<javax.swing.text.PlainDocument: void insertString(int,java.lang.String,javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.constant.DynamicConstantDesc: void <init>(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc[])>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean isDefined(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$MapN: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.security.cert.PKIXRevocationChecker: void setOcspResponses(java.util.Map)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<java.util.AbstractList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields(boolean)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<javax.print.attribute.standard.PrintQuality: java.lang.String[] getStringTable()>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.util.XSObjectListImpl: boolean containsObject(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLErrorReporter: java.lang.String[] getRecognizedFeatures()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int indexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JComboBox: void contentsChanged(javax.swing.event.ListDataEvent)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>";
"<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle tableSwitch(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle[])>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.LambdaForm: boolean checkInt(java.lang.Class,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<java.security.Provider$OPType: java.security.Provider$OPType[] values()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.util.LinkedList: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>";
"<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: int hashCode()>";
"<java.util.concurrent.LinkedBlockingDeque: boolean removeFirstOccurrence(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<CategoryPointerAnnotation: void setLabelOffset(double)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: void fireAnnotationChanged()>";
"<javax.swing.text.PlainView$FPMethodArgs: javax.swing.text.PlainView$FPMethodArgs[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: java.lang.String getText()>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPointerAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void fill(java.awt.Shape)>";
"<javax.swing.text.StyleContext$SmallAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.text.html.MuxingAttributeSet: boolean containsAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<sun.invoke.util.Wrapper: sun.invoke.util.Wrapper[] values()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<javax.swing.text.SimpleAttributeSet: void removeAttributes(javax.swing.text.AttributeSet)>" -> "<org.jfree.chart.annotations.XYLineAnnotation: boolean equals(java.lang.Object)>";
"<jdk.xml.internal.JdkXmlFeatures$XmlFeature: jdk.xml.internal.JdkXmlFeatures$XmlFeature[] values()>" -> "<org.jfree.chart.annotations.XYLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: int hashCode()>" -> "<org.jfree.chart.util.HashUtilities: int hashCodeForPaint(java.awt.Paint)>";
"<org.jfree.chart.annotations.XYTextAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.plot.Plot: void <clinit>()>";
"<java.security.cert.X509CRLSelector: java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: java.lang.Object get(java.lang.Object)>" -> "<org.jfree.chart.annotations.TextAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.util.AugmentationsImpl$SmallContainer: java.lang.Object getItem(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.reflect.Type[] getBounds()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.security.cert.TrustAnchor: byte[] getNameConstraints()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.Class: java.lang.Object[] getEnumConstants()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<sun.print.ProxyGraphics2D: void setStroke(java.awt.Stroke)>";
"<java.awt.image.ColorModel: int[] getComponentSize()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: int hashCode()>";
"<XYPointerAnnotation: void <init>(java.lang.String,double,double,double)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: void <init>(java.lang.String,double,double)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.plot.IntervalMarker: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.LegendItem: java.lang.Object clone()>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Object clone()>";
"<java.nio.file.FileTreeWalker$EventType: java.nio.file.FileTreeWalker$EventType[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ImmutableCollections$Map1: boolean containsKey(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: boolean equals(java.lang.Object)>";
"<javax.xml.catalog.GroupEntry$ResolveType: javax.xml.catalog.GroupEntry$ResolveType[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYShapeAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<java.awt.geom.QuadCurve2D$Double: java.awt.geom.Rectangle2D getBounds2D()>";
"<org.jfree.chart.annotations.XYDataImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<jdk.internal.logger.BootstrapLogger$LoggingBackend: jdk.internal.logger.BootstrapLogger$LoggingBackend[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.module.ModuleDescriptor$Modifier: java.lang.module.ModuleDescriptor$Modifier[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<sun.text.RuleBasedBreakIterator: java.lang.Object clone()>";
"<java.util.ImmutableCollections$SetN: int hashCode()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: int hashCode()>";
"<java.util.ImmutableCollections$List12: int lastIndexOf(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.time.format.TextStyle: java.time.format.TextStyle[] values()>" -> "<org.jfree.chart.annotations.XYTextAnnotation: java.lang.Object clone()>";
"<jdk.xml.internal.JdkProperty$ImplPropMap: jdk.xml.internal.JdkProperty$ImplPropMap[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object doRemove(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.awt.SoftCache: boolean valEquals(java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYImageAnnotation: boolean equals(java.lang.Object)>";
"<java.util.stream.StreamOpFlag: java.util.stream.StreamOpFlag[] values()>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: java.lang.Object clone()>";
"<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<javax.imageio.plugins.jpeg.JPEGImageWriteParam: javax.imageio.plugins.jpeg.JPEGQTable[] getQTables()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<java.util.ArrayDeque: boolean contains(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTextAnnotation: boolean equals(java.lang.Object)>";
"<sun.nio.fs.WindowsPathType: sun.nio.fs.WindowsPathType[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentSkipListMap: boolean containsValue(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: boolean equals(java.lang.Object)>";
"<com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl: java.lang.String[] getRecognizedProperties()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<com.sun.imageio.plugins.tiff.TIFFIFD: com.sun.imageio.plugins.tiff.TIFFIFD getShallowClone()>" -> "<org.jfree.chart.annotations.XYTitleAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.MethodHandles$Lookup$ClassOption: java.lang.invoke.MethodHandles$Lookup$ClassOption[] values()>" -> "<org.jfree.chart.annotations.XYImageAnnotation: java.lang.Object clone()>";
"<java.lang.invoke.VarHandle$AccessMode: java.lang.invoke.VarHandle$AccessMode[] values()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509Key: byte[] getEncoded()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.CategoryPointerAnnotation: boolean equals(java.lang.Object)>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<org.jfree.chart.ChartRenderingInfo: java.lang.Object clone()>";
"<javax.swing.tree.TreePath: boolean equals(java.lang.Object)>" -> "<org.jfree.chart.annotations.XYPolygonAnnotation: boolean equals(java.lang.Object)>";
"<java.time.chrono.IsoEra: java.time.chrono.IsoEra[] values()>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>";
"<javax.swing.tree.DefaultTreeSelectionModel: void readObject(java.io.ObjectInputStream)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: boolean equals(java.lang.Object)>";
"<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>" -> "<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>";
"<java.util.Collections$CopiesList: int hashCode()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: int hashCode()>";
"<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission[] values()>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYImageAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.String getToolTipText()>";
"<java.math.RoundingMode: java.math.RoundingMode[] values()>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
"<java.awt.image.DataBufferInt: void <init>(int[][],int,int[])>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Object clone()>";
"<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>" -> "<org.jfree.chart.annotations.XYDrawableAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.net.HttpCookie: java.lang.Object clone()>";
"<org.jfree.chart.annotations.XYPolygonAnnotation: double[] getPolygonCoordinates()>" -> "<java.util.Locale: java.lang.Object clone()>";
"<org.jfree.chart.annotations.CategoryPointerAnnotation: void setArrowPaint(java.awt.Paint)>" -> "<java.lang.Throwable: void <clinit>()>";
"<java.awt.SystemTray: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: boolean equals(java.lang.Object)>";
"<CategoryPointerAnnotation: void <init>(java.lang.String,java.lang.Comparable,double,double)>" -> "<org.jfree.chart.annotations.CategoryTextAnnotation: void <init>(java.lang.String,java.lang.Comparable,double)>";
"<java.beans.VetoableChangeSupport: void fireVetoableChange(java.beans.PropertyChangeEvent)>" -> "<org.jfree.chart.annotations.CategoryLineAnnotation: boolean equals(java.lang.Object)>";
"<java.time.format.ResolverStyle: java.time.format.ResolverStyle[] values()>" -> "<org.jfree.chart.annotations.XYPointerAnnotation: java.lang.Object clone()>";
"<javax.imageio.plugins.jpeg.JPEGImageReadParam: javax.imageio.plugins.jpeg.JPEGHuffmanTable[] getDCHuffmanTables()>" -> "<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.Object clone()>";
"<sun.security.x509.X509CertInfo: void encode(java.io.OutputStream)>" -> "<org.jfree.chart.annotations.XYDataImageAnnotation: java.lang.Object clone()>";
"<org.jfree.chart.plot.XYPlot: void drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: void draw(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,int,org.jfree.chart.plot.PlotRenderingInfo)>";
"<com.sun.imageio.plugins.tiff.TIFFDecompressor: void setSampleFormat(int[])>" -> "<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.Object clone()>";
}
